name: Build Release
on:
  workflow_dispatch:
    inputs:
      upload:
        description: 'Upload: If want ignore'
        required: false
jobs:
  check:
    name: Check Access
    runs-on: ubuntu-latest
    steps:
    - name: "Check access"
      uses: "lannonbr/repo-permission-check-action@2.0.0"
      with:
        permission: "write"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Copy CI gradle.properties
      run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
      
    - name: Build with Gradle
      run: ./gradlew clean assembleRelease     
    - uses: r0adkll/sign-android-release@v1
      name: Sign APK
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "30.0.3"
    - name: Install Rename
      run: |
        sudo apt install -y rename;
    - name: Remove&&Rename
      run: |
        find app/build/outputs/apk/release -name "*-aligned.apk" -exec rm -rf {} \;
        find app/build/outputs/apk/release -name "*.jks" -exec rm -rf {} \;
        find app/build/outputs/apk/release -name "*-unsigned.apk" -exec rm -rf {} \;
        find app/build/outputs/apk/release -name "*.idsig" -exec rm -rf {} \;
        find app/build/outputs/apk/release -name "*.json" -exec rm -rf {} \;
        find app/build/outputs/apk/release -name "*-unsigned-signed.apk" -exec rename "s/-unsigned-signed//" {} \;
    - uses: actions/upload-artifact@v2
      with:
        name: Release
        path: app/build/outputs/apk/release
  upload:
    name: Upload Release
    if: github.event.inputs.upload != 'y'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Donwload Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Release
          path: artifacts
      - name: Release
        run: |
          mkdir apks
          find artifacts -name "*.apk" -exec cp {} apks \;
          function upload() {
            for apk in $@; do
              echo ">> Uploading $apk"
              curl https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument \
                -X POST \
                -F chat_id="${{ secrets.TELEGRAM_CHANNEL }}" \
                -F document="@$apk" \
                --silent --show-error --fail >/dev/null &
            done
            for job in $(jobs -p); do
              wait $job || exit 1
            done
          }
          upload apks/*